)ATTR
_ TYPE(INPUT) INTENS(HIGH) COLOR(TURQ) HILITE(USCORE)
% TYPE(TEXT) INTENS(LOW) SKIP(ON)
+ TYPE(TEXT) INTENS(HIGH) SKIP(ON) PAD(_)
)BODY
%-----------------------------  VARY ON/OFF  -----------------------------------
+                                                                              +
+ SELECT OPTION:                                            +
+ [On]line                                                  +
+ [Off]line                                                 +
+ 0.Back to prev menu                                       +
+                                                           +
% SELECT      ===>_ST     %
% FOR SYSTEMS ===>_SYST                             %+ Blank = ALL SYSTEMS     +
% FOR DISKS   ===>_DISK                             %+ !SYSTEM = EXCLUDE       +
+                                                           +
+                                                           +
+ CURRENT SYSTEMS LIST ... &SYSDS                           +
+ CURRENT TEMPDS ......... &TEMPDS                          +
+                                                           +
                                                                               %
)INIT
.CURSOR = ST
&SYSDS='A09.TS'
&TEMPDS='A09.TMP'
)PROC
IF (&ST NE '0' & &ST NE 'EXIT' & &SYST NE 'EXIT' & &DISK NE 'EXIT')
  *REXX(ST,DISK,SYST,SYSDS,TEMPDS)
  /*SYSDS='A09.TS'        DS which contain systems list */
  /*TEMPDS='A09.TMP'      DS which generate system command JCL */
  CHK=0              /* used for flag excluded systems */
  LAMPA=0            /* bool for flagging full/empty syst var */
  if ST = 'OFF' ! ST = 'OF' then
  do
    ST='OFFLINE'
  end
  if ST = 'ON' then
  do
    ST = 'ONLINE'
  end
  /* run routine which generates jcl with system command 'vary'*/
  CALL ALLCJCL# TEMPDS DISK ST
  /*Checking systems*/
  /*read system list file*/
    "ALLOC DA('"SYSDS"') F(INPUTDD) SHR REUSE"
    "EXECIO * DISKR INPUTDD (STEM SYSL. FINIS"
    "FREE F(INPUTDD)"
  /*splitting systems string into stems*/
  if syst/='' then
  do
  lampa=1
    do i = 1 by 1 while syst <> ''
      parse var syst sysmass.i ',' syst
    end
    sysmass.0 = i-1
    /*IF SYSTEMS EXCLUDED*/
    do i=1 to sysmass.0 by 1
      if left(sysmass.i,1)='!' then
      chk = chk+1
    end
    newsys.0=0
    if chk>0 then
    DO i = 1 to SYSL.0 by 1
      jk=0
      DO j=1 to sysmass.0 by 1
        if SYSL.i /= substr(sysmass.j,2) then
        jk = jk+1
      END
      if jk=sysmass.0 then
      do
        newsys.0=newsys.0+1
        tmp=newsys.0
        newsys.tmp=SYSL.i
      end
    END
  END
  "CONSPROF SOLDISP(NO) SOLNUM(5) UNSOLDISPLAY(NO)"
  IF chk = 0 THEN
  DO
    /* IF EXCLUDING SYSTEMS NOT FOUND */
    IF LAMPA = 1 THEN
    DO
      /* IF NEED TO TRANSFER TO DETERMINED SYSTEMS */
      "CONSOLE ACTIVATE NAME(A09)"
      ADDRESS CONSOLE
      "CART SYSCMD01"
      DO i = 1 to sysmass.0
        SAY 'transferring 'TEMPDS' to 'sysmass.I
        COMMAND="S FTPSUB,SYS="SYSMASS.i",DS='"TEMPDS"'"
        INTERPRET '"'COMMAND'"'
        CR = GETMSG('SYSRESP.','SOL','SYSCMD01',,5)
      END
      ADDRESS TSO
      "CONSOLE DEACTIVATE"
    END
    ELSE
    DO
      /* IF NEED TO TRANSFER TO ALL SYSTEMS */
      /*FTPSUB PROC FOR EXEC PREVIOUS CODE ON MULTIPLE SYSTEMS*/
      "CONSOLE ACTIVATE NAME(A09)"
      ADDRESS CONSOLE
      "CART SYSCMD01"
      DO i = 1 to sysl.0
        SAY 'transferring 'TEMPDS' to 'sysl.I
        COMMAND="S FTPSUB,SYS="SYSl.i",DS='"TEMPDS"'"
        INTERPRET '"'COMMAND'"'
        CR = GETMSG('SYSRESP.','SOL','SYSCMD01',,5)
      END
      ADDRESS TSO
      "CONSOLE DEACTIVATE"
    END
  END
  ELSE
  DO
  /* IF RUN WITHOUT EXCLUDED SYSTEMS */
    "CONSOLE ACTIVATE NAME(A09)"
    ADDRESS CONSOLE
    "CART SYSCMD01"
    DO i = 1 to newsys.0
      SAY 'transferring 'TEMPDS' to 'NEWSYS.I
      COMMAND="S FTPSUB,SYS="newsys.i",DS='"TEMPDS"'"
      INTERPRET '"'COMMAND'"'
      CR = GETMSG('SYSRESP.','SOL','SYSCMD01',,5)
    END
    ADDRESS TSO
    "CONSOLE DEACTIVATE"
  END
  DROP newsys
  DROP SYSL
  DROP SYSMASS
  DROP LAMPA
  DROP CHK
  DROP SYST
  *ENDREXX
)HELP
FIELD(ST) PANEL(HSMSTAT)
FIELD(SYST) PANEL(HSMSTAT)
FIELD(DISK) PANEL(HSMSTAT)
)END
